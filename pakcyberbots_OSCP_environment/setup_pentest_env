#!/usr/bin/env bash
set -euo pipefail

# --- Functions ---
show_help() {
  cat <<EOF

Usage: $(basename "$0") [OPTION] [TARGET_FILE]

Options:
  --help               Show this help message and exit.
  --oscp-exam FILE     Enable OSCP exam mode. FILE must contain exactly 6 IPs:
                         - First 3 IPs will be assigned to DC01_IP, MS01_IP, MS02_IP
                         - Last 3 IPs will be assigned to T1_IP, T2_IP, T3_IP
                         You'll be prompted to choose AD or Standalone machine.

  FILE                 Provide a file with IPs in the format:
                         x.x.x.x           -> Assigned as IP1, IP2, ...
                         x.x.x.x:VAR_NAME  -> Assigned as specified variable

No option             Enter IPs interactively.

Examples:
  $(basename "$0")                          # Interactive mode
  $(basename "$0") targets.txt              # Load IPs from file
  $(basename "$0") --oscp-exam targets.txt  # OSCP mode, assign special variables

EOF
}

print_oscp_info() {
  echo "[OSCP MODE ENABLED]"
  echo " - First IP: DC01_IP (Domain Controller)"
  echo " - Second IP: MS01_IP (Domain Joined)"
  echo " - Third IP: MS02_IP (Domain Joined)"
  echo " - Fourthâ€“Sixth IPs: Standalone Machines T1, T2, T3"
  echo
}

handle_oscp_ips() {
  local file="$1"
  mapfile -t lines < "$file"

  if [[ ${#lines[@]} -lt 6 ]]; then
    echo "[-] Error: At least 6 IPs are required in $file for OSCP mode."
    exit 1
  fi

  # Trim and assign
  for i in {0..5}; do
    lines[$i]=$(echo "${lines[$i]}" | xargs)
  done

  echo
  echo "Choose target environment:"
  echo "1) Active Directory Network"
  echo "2) Standalone Machine 1"
  echo "3) Standalone Machine 2"
  echo "4) Standalone Machine 3"
  read -rp "Select (1-4): " choice

  case "$choice" in
    1)
      echo "export DC01_IP=\"${lines[0]}\"" >> "$SETTINGS"
      echo "export MS01_IP=\"${lines[1]}\"" >> "$SETTINGS"
      echo "export MS02_IP=\"${lines[2]}\"" >> "$SETTINGS"
      echo "[+] AD IPs exported."
      OSCP_SUBDIR="AD_Env"
      echo "[+] Subdirectory '$OSCP_SUBDIR' created for Active Directory environment."
      ;;
    2|3|4)
      idx=$((choice + 2))
      echo "export T$((choice-1))_IP=\"${lines[$idx - 1]}\"" >> "$SETTINGS"
      echo "[+] Standalone T$((choice-1))_IP exported."
      OSCP_SUBDIR="target_$((choice-1))"
	  echo "[+] Subdirectory '$OSCP_SUBDIR' created for StandAlone Machine $((choice-1))"
  
      ;;
    *)
      echo "[-] Invalid selection."
      exit 1
      ;;
  esac
}

# --- Initial Setup ---


SETTINGS="$HOME/.my_penenv_settings"
: > "$SETTINGS"  # Wipe old settings
OSCP_SUBDIR=""

# --- Argument Parsing ---
OSCP_MODE=false
TARGET_FILE=""

if [[ $# -gt 0 ]]; then
  if [[ "$1" == "--help" ]]; then
    show_help
    exit 0

  elif [[ "$1" == "--oscp-exam" && $# -eq 2 && -f "$2" ]]; then
    OSCP_MODE=true
    TARGET_FILE="$2"

  elif [[ -f "$1" ]]; then
    TARGET_FILE="$1"

  else
    echo "[-] Invalid argument: $1"
    echo "    Use --help to see usage."
    exit 1
  fi
fi

# --- OSCP Exam Mode ---
if $OSCP_MODE; then
  print_oscp_info
  handle_oscp_ips "$TARGET_FILE"

read -rp "Enter directory name: " DIR_NAME
DIR_NAME="$DIR_NAME/$OSCP_SUBDIR"
mkdir -p "$HOME/ACTIVE_PENTEST/$DIR_NAME"
TARGET_DIR="$HOME/ACTIVE_PENTEST/$DIR_NAME"

echo "export DIR_NAME=\"$DIR_NAME\"" >> "$SETTINGS"
echo 'cd $HOME/ACTIVE_PENTEST/$DIR_NAME' >> "$SETTINGS"

# --- File Provided (Normal Mode) ---
elif [[ -n "$TARGET_FILE" ]]; then
  echo "[+] IPs loaded from file: $TARGET_FILE"
  echo "    Format supported: x.x.x.x or x.x.x.x:VAR_NAME"
  i=1
  while IFS= read -r line || [[ -n $line ]]; do
    line=$(echo "$line" | xargs)
    [[ -z $line ]] && continue
    if [[ "$line" == *:* ]]; then
      IP="${line%%:*}"
      VAR="${line##*:}"
    else
      IP="$line"
      VAR="IP$i"
    fi
    echo "export $VAR=\"$IP\"" >> "$SETTINGS"
    ((i++))
  done < "$TARGET_FILE"
  echo "[+] Saved IP(s) with variable names to $SETTINGS."

# --- Interactive Input ---
else
  echo "Enter IP addresses."
  echo "  - First IP is required."
  echo "  - Leave blank (after first) to stop."
  echo "  - Optional format: x.x.x.x or x.x.x.x:VAR_NAME"
  i=1
  while :; do
    read -rp "IP#$i> " line
    [[ $i -eq 1 && -z $line ]] && { echo "First IP is required. Try again."; continue; }
    [[ $i -gt 1 && -z $line ]] && break
    line=$(echo "$line" | xargs)
    if [[ "$line" == *:* ]]; then
      IP="${line%%:*}"
      VAR="${line##*:}"
    else
      IP="$line"
      VAR="IP$i"
    fi
    echo "export $VAR=\"$IP\"" >> "$SETTINGS"
    ((i++))
  done
  echo "[+] Saved IP(s) interactively to $SETTINGS."
fi

# --- Launch Terminal ---
source "$SETTINGS"
terminator --no-dbus --layout=Pentesting